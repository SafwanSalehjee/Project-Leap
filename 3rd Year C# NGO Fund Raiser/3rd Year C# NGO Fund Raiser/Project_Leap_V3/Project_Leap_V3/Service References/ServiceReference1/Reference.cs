//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project_Leap_V3.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="reportDonation", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class reportDonation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="reportVolunteers", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class reportVolunteers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VolAmountsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VolAmounts {
            get {
                return this.VolAmountsField;
            }
            set {
                if ((this.VolAmountsField.Equals(value) != true)) {
                    this.VolAmountsField = value;
                    this.RaisePropertyChanged("VolAmounts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="reportBusDon", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class reportBusDon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="reportFC", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class reportFC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PrecentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Precentage {
            get {
                return this.PrecentageField;
            }
            set {
                if ((this.PrecentageField.Equals(value) != true)) {
                    this.PrecentageField = value;
                    this.RaisePropertyChanged("Precentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="activity", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class activity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FirstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecondField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ThirdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int First {
            get {
                return this.FirstField;
            }
            set {
                if ((this.FirstField.Equals(value) != true)) {
                    this.FirstField = value;
                    this.RaisePropertyChanged("First");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SValue {
            get {
                return this.SValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SValueField, value) != true)) {
                    this.SValueField = value;
                    this.RaisePropertyChanged("SValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Second {
            get {
                return this.SecondField;
            }
            set {
                if ((this.SecondField.Equals(value) != true)) {
                    this.SecondField = value;
                    this.RaisePropertyChanged("Second");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Third {
            get {
                return this.ThirdField;
            }
            set {
                if ((this.ThirdField.Equals(value) != true)) {
                    this.ThirdField = value;
                    this.RaisePropertyChanged("Third");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Support", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class Support : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int donationvalueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int supportValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int volunteerValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int donationvalue {
            get {
                return this.donationvalueField;
            }
            set {
                if ((this.donationvalueField.Equals(value) != true)) {
                    this.donationvalueField = value;
                    this.RaisePropertyChanged("donationvalue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int supportValue {
            get {
                return this.supportValueField;
            }
            set {
                if ((this.supportValueField.Equals(value) != true)) {
                    this.supportValueField = value;
                    this.RaisePropertyChanged("supportValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int volunteerValue {
            get {
                return this.volunteerValueField;
            }
            set {
                if ((this.volunteerValueField.Equals(value) != true)) {
                    this.volunteerValueField = value;
                    this.RaisePropertyChanged("volunteerValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="badgesReport", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class badgesReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ratingsReport", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class ratingsReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetail", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class UserDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessLvlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BannedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.SystemUser userValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessLvl {
            get {
                return this.AccessLvlField;
            }
            set {
                if ((this.AccessLvlField.Equals(value) != true)) {
                    this.AccessLvlField = value;
                    this.RaisePropertyChanged("AccessLvl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Banned {
            get {
                return this.BannedField;
            }
            set {
                if ((this.BannedField.Equals(value) != true)) {
                    this.BannedField = value;
                    this.RaisePropertyChanged("Banned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailValue {
            get {
                return this.EmailValueField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailValueField, value) != true)) {
                    this.EmailValueField = value;
                    this.RaisePropertyChanged("EmailValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstNameValue {
            get {
                return this.FirstNameValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameValueField, value) != true)) {
                    this.FirstNameValueField = value;
                    this.RaisePropertyChanged("FirstNameValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.SystemUser userValue {
            get {
                return this.userValueField;
            }
            set {
                if ((object.ReferenceEquals(this.userValueField, value) != true)) {
                    this.userValueField = value;
                    this.RaisePropertyChanged("userValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemUser", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class SystemUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AccessLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BannedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContinentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Donation[] DonationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.EventRSVP[] EventRSVPsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Individual IndividualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Manager[] ManagersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.NPORating[] NPORatingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfilePictureURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AccessLevel {
            get {
                return this.AccessLevelField;
            }
            set {
                if ((this.AccessLevelField.Equals(value) != true)) {
                    this.AccessLevelField = value;
                    this.RaisePropertyChanged("AccessLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Banned {
            get {
                return this.BannedField;
            }
            set {
                if ((this.BannedField.Equals(value) != true)) {
                    this.BannedField = value;
                    this.RaisePropertyChanged("Banned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Continent {
            get {
                return this.ContinentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContinentField, value) != true)) {
                    this.ContinentField = value;
                    this.RaisePropertyChanged("Continent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Donation[] Donations {
            get {
                return this.DonationsField;
            }
            set {
                if ((object.ReferenceEquals(this.DonationsField, value) != true)) {
                    this.DonationsField = value;
                    this.RaisePropertyChanged("Donations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.EventRSVP[] EventRSVPs {
            get {
                return this.EventRSVPsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventRSVPsField, value) != true)) {
                    this.EventRSVPsField = value;
                    this.RaisePropertyChanged("EventRSVPs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Individual Individual {
            get {
                return this.IndividualField;
            }
            set {
                if ((object.ReferenceEquals(this.IndividualField, value) != true)) {
                    this.IndividualField = value;
                    this.RaisePropertyChanged("Individual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Manager[] Managers {
            get {
                return this.ManagersField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagersField, value) != true)) {
                    this.ManagersField = value;
                    this.RaisePropertyChanged("Managers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.NPORating[] NPORatings {
            get {
                return this.NPORatingsField;
            }
            set {
                if ((object.ReferenceEquals(this.NPORatingsField, value) != true)) {
                    this.NPORatingsField = value;
                    this.RaisePropertyChanged("NPORatings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfilePictureURL {
            get {
                return this.ProfilePictureURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePictureURLField, value) != true)) {
                    this.ProfilePictureURLField = value;
                    this.RaisePropertyChanged("ProfilePictureURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Individual", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class Individual : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.SystemUser SystemUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.UserBadge[] UserBadgesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.VolunteerEvent[] VolunteerEventsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Point {
            get {
                return this.PointField;
            }
            set {
                if ((this.PointField.Equals(value) != true)) {
                    this.PointField = value;
                    this.RaisePropertyChanged("Point");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.SystemUser SystemUser {
            get {
                return this.SystemUserField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemUserField, value) != true)) {
                    this.SystemUserField = value;
                    this.RaisePropertyChanged("SystemUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.UserBadge[] UserBadges {
            get {
                return this.UserBadgesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserBadgesField, value) != true)) {
                    this.UserBadgesField = value;
                    this.RaisePropertyChanged("UserBadges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.VolunteerEvent[] VolunteerEvents {
            get {
                return this.VolunteerEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.VolunteerEventsField, value) != true)) {
                    this.VolunteerEventsField = value;
                    this.RaisePropertyChanged("VolunteerEvents");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Donation", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class Donation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DonationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DonationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.DonationRequest DonationRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.EquipmentDonation EquipmentDonationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.MoneyDonation MoneyDonationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Organisation OrganisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrganisationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RequestIDNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.SystemUser SystemUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DonationDate {
            get {
                return this.DonationDateField;
            }
            set {
                if ((this.DonationDateField.Equals(value) != true)) {
                    this.DonationDateField = value;
                    this.RaisePropertyChanged("DonationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DonationID {
            get {
                return this.DonationIDField;
            }
            set {
                if ((this.DonationIDField.Equals(value) != true)) {
                    this.DonationIDField = value;
                    this.RaisePropertyChanged("DonationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.DonationRequest DonationRequest {
            get {
                return this.DonationRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.DonationRequestField, value) != true)) {
                    this.DonationRequestField = value;
                    this.RaisePropertyChanged("DonationRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.EquipmentDonation EquipmentDonation {
            get {
                return this.EquipmentDonationField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentDonationField, value) != true)) {
                    this.EquipmentDonationField = value;
                    this.RaisePropertyChanged("EquipmentDonation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.MoneyDonation MoneyDonation {
            get {
                return this.MoneyDonationField;
            }
            set {
                if ((object.ReferenceEquals(this.MoneyDonationField, value) != true)) {
                    this.MoneyDonationField = value;
                    this.RaisePropertyChanged("MoneyDonation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Organisation Organisation {
            get {
                return this.OrganisationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganisationField, value) != true)) {
                    this.OrganisationField = value;
                    this.RaisePropertyChanged("Organisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrganisationID {
            get {
                return this.OrganisationIDField;
            }
            set {
                if ((this.OrganisationIDField.Equals(value) != true)) {
                    this.OrganisationIDField = value;
                    this.RaisePropertyChanged("OrganisationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RequestIDNumber {
            get {
                return this.RequestIDNumberField;
            }
            set {
                if ((this.RequestIDNumberField.Equals(value) != true)) {
                    this.RequestIDNumberField = value;
                    this.RaisePropertyChanged("RequestIDNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.SystemUser SystemUser {
            get {
                return this.SystemUserField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemUserField, value) != true)) {
                    this.SystemUserField = value;
                    this.RaisePropertyChanged("SystemUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventRSVP", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class EventRSVP : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttendenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Event EventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RSVPIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.SystemUser SystemUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attendence {
            get {
                return this.AttendenceField;
            }
            set {
                if ((object.ReferenceEquals(this.AttendenceField, value) != true)) {
                    this.AttendenceField = value;
                    this.RaisePropertyChanged("Attendence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Event Event {
            get {
                return this.EventField;
            }
            set {
                if ((object.ReferenceEquals(this.EventField, value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RSVPID {
            get {
                return this.RSVPIDField;
            }
            set {
                if ((this.RSVPIDField.Equals(value) != true)) {
                    this.RSVPIDField = value;
                    this.RaisePropertyChanged("RSVPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.SystemUser SystemUser {
            get {
                return this.SystemUserField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemUserField, value) != true)) {
                    this.SystemUserField = value;
                    this.RaisePropertyChanged("SystemUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Manager", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class Manager : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Organisation OrganisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganisationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.SystemUser SystemUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Organisation Organisation {
            get {
                return this.OrganisationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganisationField, value) != true)) {
                    this.OrganisationField = value;
                    this.RaisePropertyChanged("Organisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganisationID {
            get {
                return this.OrganisationIDField;
            }
            set {
                if ((this.OrganisationIDField.Equals(value) != true)) {
                    this.OrganisationIDField = value;
                    this.RaisePropertyChanged("OrganisationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.SystemUser SystemUser {
            get {
                return this.SystemUserField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemUserField, value) != true)) {
                    this.SystemUserField = value;
                    this.RaisePropertyChanged("SystemUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NPORating", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class NPORating : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Organisation OrganisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganisationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatindIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.SystemUser SystemUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Organisation Organisation {
            get {
                return this.OrganisationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganisationField, value) != true)) {
                    this.OrganisationField = value;
                    this.RaisePropertyChanged("Organisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganisationID {
            get {
                return this.OrganisationIDField;
            }
            set {
                if ((this.OrganisationIDField.Equals(value) != true)) {
                    this.OrganisationIDField = value;
                    this.RaisePropertyChanged("OrganisationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RatindID {
            get {
                return this.RatindIDField;
            }
            set {
                if ((this.RatindIDField.Equals(value) != true)) {
                    this.RatindIDField = value;
                    this.RaisePropertyChanged("RatindID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.SystemUser SystemUser {
            get {
                return this.SystemUserField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemUserField, value) != true)) {
                    this.SystemUserField = value;
                    this.RaisePropertyChanged("SystemUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DonationRequest", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class DonationRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DonationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Donation[] DonationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Organisation OrganisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganisationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestIDNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DonationDate {
            get {
                return this.DonationDateField;
            }
            set {
                if ((this.DonationDateField.Equals(value) != true)) {
                    this.DonationDateField = value;
                    this.RaisePropertyChanged("DonationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Donation[] Donations {
            get {
                return this.DonationsField;
            }
            set {
                if ((object.ReferenceEquals(this.DonationsField, value) != true)) {
                    this.DonationsField = value;
                    this.RaisePropertyChanged("Donations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Organisation Organisation {
            get {
                return this.OrganisationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganisationField, value) != true)) {
                    this.OrganisationField = value;
                    this.RaisePropertyChanged("Organisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganisationID {
            get {
                return this.OrganisationIDField;
            }
            set {
                if ((this.OrganisationIDField.Equals(value) != true)) {
                    this.OrganisationIDField = value;
                    this.RaisePropertyChanged("OrganisationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestIDNumber {
            get {
                return this.RequestIDNumberField;
            }
            set {
                if ((this.RequestIDNumberField.Equals(value) != true)) {
                    this.RequestIDNumberField = value;
                    this.RaisePropertyChanged("RequestIDNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentDonation", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class EquipmentDonation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Donation DonationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DonationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Donation Donation {
            get {
                return this.DonationField;
            }
            set {
                if ((object.ReferenceEquals(this.DonationField, value) != true)) {
                    this.DonationField = value;
                    this.RaisePropertyChanged("Donation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DonationID {
            get {
                return this.DonationIDField;
            }
            set {
                if ((this.DonationIDField.Equals(value) != true)) {
                    this.DonationIDField = value;
                    this.RaisePropertyChanged("DonationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentName {
            get {
                return this.EquipmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentNameField, value) != true)) {
                    this.EquipmentNameField = value;
                    this.RaisePropertyChanged("EquipmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MoneyDonation", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class MoneyDonation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Donation DonationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DonationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TransactionAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TransactionPercentageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Donation Donation {
            get {
                return this.DonationField;
            }
            set {
                if ((object.ReferenceEquals(this.DonationField, value) != true)) {
                    this.DonationField = value;
                    this.RaisePropertyChanged("Donation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DonationID {
            get {
                return this.DonationIDField;
            }
            set {
                if ((this.DonationIDField.Equals(value) != true)) {
                    this.DonationIDField = value;
                    this.RaisePropertyChanged("DonationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TransactionAmount {
            get {
                return this.TransactionAmountField;
            }
            set {
                if ((this.TransactionAmountField.Equals(value) != true)) {
                    this.TransactionAmountField = value;
                    this.RaisePropertyChanged("TransactionAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TransactionPercentage {
            get {
                return this.TransactionPercentageField;
            }
            set {
                if ((this.TransactionPercentageField.Equals(value) != true)) {
                    this.TransactionPercentageField = value;
                    this.RaisePropertyChanged("TransactionPercentage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Organisation", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class Organisation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BannedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.BusinessPoint BusinessPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContinentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.DonationRequest[] DonationRequestsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Donation[] DonationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Event[] EventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.FundraisingCampaign[] FundraisingCampaignsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndustryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogoURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Manager[] ManagersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.NPORating[] NPORatingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.NewsFeed[] NewsFeedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganisationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganisationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrganisationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrganisationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuburbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VerifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.VolunteerEvent[] VolunteerEventsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Banned {
            get {
                return this.BannedField;
            }
            set {
                if ((this.BannedField.Equals(value) != true)) {
                    this.BannedField = value;
                    this.RaisePropertyChanged("Banned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.BusinessPoint BusinessPoint {
            get {
                return this.BusinessPointField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessPointField, value) != true)) {
                    this.BusinessPointField = value;
                    this.RaisePropertyChanged("BusinessPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactNumber {
            get {
                return this.ContactNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNumberField, value) != true)) {
                    this.ContactNumberField = value;
                    this.RaisePropertyChanged("ContactNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Continent {
            get {
                return this.ContinentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContinentField, value) != true)) {
                    this.ContinentField = value;
                    this.RaisePropertyChanged("Continent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.DonationRequest[] DonationRequests {
            get {
                return this.DonationRequestsField;
            }
            set {
                if ((object.ReferenceEquals(this.DonationRequestsField, value) != true)) {
                    this.DonationRequestsField = value;
                    this.RaisePropertyChanged("DonationRequests");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Donation[] Donations {
            get {
                return this.DonationsField;
            }
            set {
                if ((object.ReferenceEquals(this.DonationsField, value) != true)) {
                    this.DonationsField = value;
                    this.RaisePropertyChanged("Donations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Event[] Events {
            get {
                return this.EventsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsField, value) != true)) {
                    this.EventsField = value;
                    this.RaisePropertyChanged("Events");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.FundraisingCampaign[] FundraisingCampaigns {
            get {
                return this.FundraisingCampaignsField;
            }
            set {
                if ((object.ReferenceEquals(this.FundraisingCampaignsField, value) != true)) {
                    this.FundraisingCampaignsField = value;
                    this.RaisePropertyChanged("FundraisingCampaigns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Industry {
            get {
                return this.IndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryField, value) != true)) {
                    this.IndustryField = value;
                    this.RaisePropertyChanged("Industry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogoURL {
            get {
                return this.LogoURLField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoURLField, value) != true)) {
                    this.LogoURLField = value;
                    this.RaisePropertyChanged("LogoURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Manager[] Managers {
            get {
                return this.ManagersField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagersField, value) != true)) {
                    this.ManagersField = value;
                    this.RaisePropertyChanged("Managers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.NPORating[] NPORatings {
            get {
                return this.NPORatingsField;
            }
            set {
                if ((object.ReferenceEquals(this.NPORatingsField, value) != true)) {
                    this.NPORatingsField = value;
                    this.RaisePropertyChanged("NPORatings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.NewsFeed[] NewsFeeds {
            get {
                return this.NewsFeedsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsFeedsField, value) != true)) {
                    this.NewsFeedsField = value;
                    this.RaisePropertyChanged("NewsFeeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganisationID {
            get {
                return this.OrganisationIDField;
            }
            set {
                if ((this.OrganisationIDField.Equals(value) != true)) {
                    this.OrganisationIDField = value;
                    this.RaisePropertyChanged("OrganisationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganisationName {
            get {
                return this.OrganisationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganisationNameField, value) != true)) {
                    this.OrganisationNameField = value;
                    this.RaisePropertyChanged("OrganisationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrganisationNumber {
            get {
                return this.OrganisationNumberField;
            }
            set {
                if ((this.OrganisationNumberField.Equals(value) != true)) {
                    this.OrganisationNumberField = value;
                    this.RaisePropertyChanged("OrganisationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrganisationType {
            get {
                return this.OrganisationTypeField;
            }
            set {
                if ((this.OrganisationTypeField.Equals(value) != true)) {
                    this.OrganisationTypeField = value;
                    this.RaisePropertyChanged("OrganisationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suburb {
            get {
                return this.SuburbField;
            }
            set {
                if ((object.ReferenceEquals(this.SuburbField, value) != true)) {
                    this.SuburbField = value;
                    this.RaisePropertyChanged("Suburb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Verified {
            get {
                return this.VerifiedField;
            }
            set {
                if ((this.VerifiedField.Equals(value) != true)) {
                    this.VerifiedField = value;
                    this.RaisePropertyChanged("Verified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.VolunteerEvent[] VolunteerEvents {
            get {
                return this.VolunteerEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.VolunteerEventsField, value) != true)) {
                    this.VolunteerEventsField = value;
                    this.RaisePropertyChanged("VolunteerEvents");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessPoint", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class BusinessPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Organisation OrganisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganisationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Organisation Organisation {
            get {
                return this.OrganisationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganisationField, value) != true)) {
                    this.OrganisationField = value;
                    this.RaisePropertyChanged("Organisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganisationID {
            get {
                return this.OrganisationIDField;
            }
            set {
                if ((this.OrganisationIDField.Equals(value) != true)) {
                    this.OrganisationIDField = value;
                    this.RaisePropertyChanged("OrganisationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Point {
            get {
                return this.PointField;
            }
            set {
                if ((this.PointField.Equals(value) != true)) {
                    this.PointField = value;
                    this.RaisePropertyChanged("Point");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.EventRSVP[] EventRSVPsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Organisation OrganisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganisationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeOfEventField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfEvent {
            get {
                return this.DateOfEventField;
            }
            set {
                if ((this.DateOfEventField.Equals(value) != true)) {
                    this.DateOfEventField = value;
                    this.RaisePropertyChanged("DateOfEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.EventRSVP[] EventRSVPs {
            get {
                return this.EventRSVPsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventRSVPsField, value) != true)) {
                    this.EventRSVPsField = value;
                    this.RaisePropertyChanged("EventRSVPs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Organisation Organisation {
            get {
                return this.OrganisationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganisationField, value) != true)) {
                    this.OrganisationField = value;
                    this.RaisePropertyChanged("Organisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganisationID {
            get {
                return this.OrganisationIDField;
            }
            set {
                if ((this.OrganisationIDField.Equals(value) != true)) {
                    this.OrganisationIDField = value;
                    this.RaisePropertyChanged("OrganisationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeOfEvent {
            get {
                return this.TimeOfEventField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeOfEventField, value) != true)) {
                    this.TimeOfEventField = value;
                    this.RaisePropertyChanged("TimeOfEvent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FundraisingCampaign", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class FundraisingCampaign : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CurrentAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FundraisingCampaignIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Organisation OrganisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganisationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CurrentAmount {
            get {
                return this.CurrentAmountField;
            }
            set {
                if ((this.CurrentAmountField.Equals(value) != true)) {
                    this.CurrentAmountField = value;
                    this.RaisePropertyChanged("CurrentAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FundraisingCampaignID {
            get {
                return this.FundraisingCampaignIDField;
            }
            set {
                if ((this.FundraisingCampaignIDField.Equals(value) != true)) {
                    this.FundraisingCampaignIDField = value;
                    this.RaisePropertyChanged("FundraisingCampaignID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Organisation Organisation {
            get {
                return this.OrganisationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganisationField, value) != true)) {
                    this.OrganisationField = value;
                    this.RaisePropertyChanged("Organisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganisationID {
            get {
                return this.OrganisationIDField;
            }
            set {
                if ((this.OrganisationIDField.Equals(value) != true)) {
                    this.OrganisationIDField = value;
                    this.RaisePropertyChanged("OrganisationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((this.TotalAmountField.Equals(value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsFeed", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class NewsFeed : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsFeedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Organisation OrganisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganisationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsFeedID {
            get {
                return this.NewsFeedIDField;
            }
            set {
                if ((this.NewsFeedIDField.Equals(value) != true)) {
                    this.NewsFeedIDField = value;
                    this.RaisePropertyChanged("NewsFeedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Organisation Organisation {
            get {
                return this.OrganisationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganisationField, value) != true)) {
                    this.OrganisationField = value;
                    this.RaisePropertyChanged("Organisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganisationID {
            get {
                return this.OrganisationIDField;
            }
            set {
                if ((this.OrganisationIDField.Equals(value) != true)) {
                    this.OrganisationIDField = value;
                    this.RaisePropertyChanged("OrganisationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VolunteerEvent", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class VolunteerEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HoursVolunteeredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Individual IndividualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Organisation OrganisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganisationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> VolunteerDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VolunteerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HoursVolunteered {
            get {
                return this.HoursVolunteeredField;
            }
            set {
                if ((this.HoursVolunteeredField.Equals(value) != true)) {
                    this.HoursVolunteeredField = value;
                    this.RaisePropertyChanged("HoursVolunteered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Individual Individual {
            get {
                return this.IndividualField;
            }
            set {
                if ((object.ReferenceEquals(this.IndividualField, value) != true)) {
                    this.IndividualField = value;
                    this.RaisePropertyChanged("Individual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Organisation Organisation {
            get {
                return this.OrganisationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganisationField, value) != true)) {
                    this.OrganisationField = value;
                    this.RaisePropertyChanged("Organisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganisationID {
            get {
                return this.OrganisationIDField;
            }
            set {
                if ((this.OrganisationIDField.Equals(value) != true)) {
                    this.OrganisationIDField = value;
                    this.RaisePropertyChanged("OrganisationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> VolunteerDate {
            get {
                return this.VolunteerDateField;
            }
            set {
                if ((this.VolunteerDateField.Equals(value) != true)) {
                    this.VolunteerDateField = value;
                    this.RaisePropertyChanged("VolunteerDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VolunteerID {
            get {
                return this.VolunteerIDField;
            }
            set {
                if ((this.VolunteerIDField.Equals(value) != true)) {
                    this.VolunteerIDField = value;
                    this.RaisePropertyChanged("VolunteerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserBadge", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class UserBadge : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Badge BadgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BadgeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Individual IndividualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Badge Badge {
            get {
                return this.BadgeField;
            }
            set {
                if ((object.ReferenceEquals(this.BadgeField, value) != true)) {
                    this.BadgeField = value;
                    this.RaisePropertyChanged("Badge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BadgeID {
            get {
                return this.BadgeIDField;
            }
            set {
                if ((this.BadgeIDField.Equals(value) != true)) {
                    this.BadgeIDField = value;
                    this.RaisePropertyChanged("BadgeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Individual Individual {
            get {
                return this.IndividualField;
            }
            set {
                if ((object.ReferenceEquals(this.IndividualField, value) != true)) {
                    this.IndividualField = value;
                    this.RaisePropertyChanged("Individual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Badge", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class Badge : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.UserBadge[] UserBadgesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Condition {
            get {
                return this.ConditionField;
            }
            set {
                if ((this.ConditionField.Equals(value) != true)) {
                    this.ConditionField = value;
                    this.RaisePropertyChanged("Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.UserBadge[] UserBadges {
            get {
                return this.UserBadgesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserBadgesField, value) != true)) {
                    this.UserBadgesField = value;
                    this.RaisePropertyChanged("UserBadges");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BannedValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BannedValue {
            get {
                return this.BannedValueField;
            }
            set {
                if ((this.BannedValueField.Equals(value) != true)) {
                    this.BannedValueField = value;
                    this.RaisePropertyChanged("BannedValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailValue {
            get {
                return this.EmailValueField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailValueField, value) != true)) {
                    this.EmailValueField = value;
                    this.RaisePropertyChanged("EmailValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstNameValue {
            get {
                return this.FirstNameValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameValueField, value) != true)) {
                    this.FirstNameValueField = value;
                    this.RaisePropertyChanged("FirstNameValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDValue {
            get {
                return this.IDValueField;
            }
            set {
                if ((this.IDValueField.Equals(value) != true)) {
                    this.IDValueField = value;
                    this.RaisePropertyChanged("IDValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastNameValue {
            get {
                return this.LastNameValueField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameValueField, value) != true)) {
                    this.LastNameValueField = value;
                    this.RaisePropertyChanged("LastNameValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeValue {
            get {
                return this.TypeValueField;
            }
            set {
                if ((this.TypeValueField.Equals(value) != true)) {
                    this.TypeValueField = value;
                    this.RaisePropertyChanged("TypeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Orga", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class Orga : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BannedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndustryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuburbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VerifiedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Banned {
            get {
                return this.BannedField;
            }
            set {
                if ((this.BannedField.Equals(value) != true)) {
                    this.BannedField = value;
                    this.RaisePropertyChanged("Banned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactNum {
            get {
                return this.ContactNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNumField, value) != true)) {
                    this.ContactNumField = value;
                    this.RaisePropertyChanged("ContactNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Industry {
            get {
                return this.IndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryField, value) != true)) {
                    this.IndustryField = value;
                    this.RaisePropertyChanged("Industry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgName {
            get {
                return this.OrgNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgNameField, value) != true)) {
                    this.OrgNameField = value;
                    this.RaisePropertyChanged("OrgName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgNum {
            get {
                return this.OrgNumField;
            }
            set {
                if ((this.OrgNumField.Equals(value) != true)) {
                    this.OrgNumField = value;
                    this.RaisePropertyChanged("OrgNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suburb {
            get {
                return this.SuburbField;
            }
            set {
                if ((object.ReferenceEquals(this.SuburbField, value) != true)) {
                    this.SuburbField = value;
                    this.RaisePropertyChanged("Suburb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Verified {
            get {
                return this.VerifiedField;
            }
            set {
                if ((this.VerifiedField.Equals(value) != true)) {
                    this.VerifiedField = value;
                    this.RaisePropertyChanged("Verified");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsF", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class NewsF : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Body1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgID1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgName1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Title1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body1 {
            get {
                return this.Body1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Body1Field, value) != true)) {
                    this.Body1Field = value;
                    this.RaisePropertyChanged("Body1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID1 {
            get {
                return this.OrgID1Field;
            }
            set {
                if ((this.OrgID1Field.Equals(value) != true)) {
                    this.OrgID1Field = value;
                    this.RaisePropertyChanged("OrgID1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgName1 {
            get {
                return this.OrgName1Field;
            }
            set {
                if ((object.ReferenceEquals(this.OrgName1Field, value) != true)) {
                    this.OrgName1Field = value;
                    this.RaisePropertyChanged("OrgName1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title1 {
            get {
                return this.Title1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Title1Field, value) != true)) {
                    this.Title1Field = value;
                    this.RaisePropertyChanged("Title1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Eve", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class Eve : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Event EventValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateValue {
            get {
                return this.DateValueField;
            }
            set {
                if ((this.DateValueField.Equals(value) != true)) {
                    this.DateValueField = value;
                    this.RaisePropertyChanged("DateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Event EventValue {
            get {
                return this.EventValueField;
            }
            set {
                if ((object.ReferenceEquals(this.EventValueField, value) != true)) {
                    this.EventValueField = value;
                    this.RaisePropertyChanged("EventValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DonationRequester", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class DonationRequester : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.DonationRequest DonateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InprogressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NpoNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqNum1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Discription {
            get {
                return this.DiscriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscriptionField, value) != true)) {
                    this.DiscriptionField = value;
                    this.RaisePropertyChanged("Discription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.DonationRequest Donate {
            get {
                return this.DonateField;
            }
            set {
                if ((object.ReferenceEquals(this.DonateField, value) != true)) {
                    this.DonateField = value;
                    this.RaisePropertyChanged("Donate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Inprogress {
            get {
                return this.InprogressField;
            }
            set {
                if ((this.InprogressField.Equals(value) != true)) {
                    this.InprogressField = value;
                    this.RaisePropertyChanged("Inprogress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NpoName {
            get {
                return this.NpoNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NpoNameField, value) != true)) {
                    this.NpoNameField = value;
                    this.RaisePropertyChanged("NpoName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqNum1 {
            get {
                return this.ReqNum1Field;
            }
            set {
                if ((this.ReqNum1Field.Equals(value) != true)) {
                    this.ReqNum1Field = value;
                    this.RaisePropertyChanged("ReqNum1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DonationUser", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class DonationUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NpoNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NpoName {
            get {
                return this.NpoNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NpoNameField, value) != true)) {
                    this.NpoNameField = value;
                    this.RaisePropertyChanged("NpoName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RSVPEvent", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class RSVPEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttendanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attendance {
            get {
                return this.AttendanceField;
            }
            set {
                if ((object.ReferenceEquals(this.AttendanceField, value) != true)) {
                    this.AttendanceField = value;
                    this.RaisePropertyChanged("Attendance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User {
            get {
                return this.UserField;
            }
            set {
                if ((this.UserField.Equals(value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventVolunteer", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class EventVolunteer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserFNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserLNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VolDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VolunteerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Hours {
            get {
                return this.HoursField;
            }
            set {
                if ((this.HoursField.Equals(value) != true)) {
                    this.HoursField = value;
                    this.RaisePropertyChanged("Hours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrnName {
            get {
                return this.OrnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrnNameField, value) != true)) {
                    this.OrnNameField = value;
                    this.RaisePropertyChanged("OrnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortDate {
            get {
                return this.ShortDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortDateField, value) != true)) {
                    this.ShortDateField = value;
                    this.RaisePropertyChanged("ShortDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserEmail {
            get {
                return this.UserEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.UserEmailField, value) != true)) {
                    this.UserEmailField = value;
                    this.RaisePropertyChanged("UserEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserFN {
            get {
                return this.UserFNField;
            }
            set {
                if ((object.ReferenceEquals(this.UserFNField, value) != true)) {
                    this.UserFNField = value;
                    this.RaisePropertyChanged("UserFN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserLN {
            get {
                return this.UserLNField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLNField, value) != true)) {
                    this.UserLNField = value;
                    this.RaisePropertyChanged("UserLN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VolDate {
            get {
                return this.VolDateField;
            }
            set {
                if ((this.VolDateField.Equals(value) != true)) {
                    this.VolDateField = value;
                    this.RaisePropertyChanged("VolDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VolunteerID {
            get {
                return this.VolunteerIDField;
            }
            set {
                if ((this.VolunteerIDField.Equals(value) != true)) {
                    this.VolunteerIDField = value;
                    this.RaisePropertyChanged("VolunteerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="cFundraisingCampaign", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class cFundraisingCampaign : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgID1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VCurrentAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project_Leap_V3.ServiceReference1.Orga VOrganisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VTotalAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDF {
            get {
                return this.IDFField;
            }
            set {
                if ((this.IDFField.Equals(value) != true)) {
                    this.IDFField = value;
                    this.RaisePropertyChanged("IDF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID1 {
            get {
                return this.OrgID1Field;
            }
            set {
                if ((this.OrgID1Field.Equals(value) != true)) {
                    this.OrgID1Field = value;
                    this.RaisePropertyChanged("OrgID1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double VCurrentAmount {
            get {
                return this.VCurrentAmountField;
            }
            set {
                if ((this.VCurrentAmountField.Equals(value) != true)) {
                    this.VCurrentAmountField = value;
                    this.RaisePropertyChanged("VCurrentAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VDescription {
            get {
                return this.VDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VDescriptionField, value) != true)) {
                    this.VDescriptionField = value;
                    this.RaisePropertyChanged("VDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project_Leap_V3.ServiceReference1.Orga VOrganisation {
            get {
                return this.VOrganisationField;
            }
            set {
                if ((object.ReferenceEquals(this.VOrganisationField, value) != true)) {
                    this.VOrganisationField = value;
                    this.RaisePropertyChanged("VOrganisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VTitle {
            get {
                return this.VTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.VTitleField, value) != true)) {
                    this.VTitleField = value;
                    this.RaisePropertyChanged("VTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double VTotalAmount {
            get {
                return this.VTotalAmountField;
            }
            set {
                if ((this.VTotalAmountField.Equals(value) != true)) {
                    this.VTotalAmountField = value;
                    this.RaisePropertyChanged("VTotalAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileClass", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class FileClass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileBytes {
            get {
                return this.FileBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.FileBytesField, value) != true)) {
                    this.FileBytesField = value;
                    this.RaisePropertyChanged("FileBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mobileEve", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class mobileEve : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NpoNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NpoName {
            get {
                return this.NpoNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NpoNameField, value) != true)) {
                    this.NpoNameField = value;
                    this.RaisePropertyChanged("NpoName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mobileFC", Namespace="http://schemas.datacontract.org/2004/07/Project_Leap_Web_Service")]
    [System.SerializableAttribute()]
    public partial class mobileFC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TargetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Current {
            get {
                return this.CurrentField;
            }
            set {
                if ((this.CurrentField.Equals(value) != true)) {
                    this.CurrentField = value;
                    this.RaisePropertyChanged("Current");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Target {
            get {
                return this.TargetField;
            }
            set {
                if ((this.TargetField.Equals(value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CaptureVolTimeMobile", ReplyAction="http://tempuri.org/IService1/CaptureVolTimeMobileResponse")]
        bool CaptureVolTimeMobile(int volID, int hours, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CaptureVolTimeMobile", ReplyAction="http://tempuri.org/IService1/CaptureVolTimeMobileResponse")]
        System.Threading.Tasks.Task<bool> CaptureVolTimeMobileAsync(int volID, int hours, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkBadge", ReplyAction="http://tempuri.org/IService1/checkBadgeResponse")]
        bool checkBadge(int userID, int BadgeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkBadge", ReplyAction="http://tempuri.org/IService1/checkBadgeResponse")]
        System.Threading.Tasks.Task<bool> checkBadgeAsync(int userID, int BadgeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNumOfBadgesEarned", ReplyAction="http://tempuri.org/IService1/getNumOfBadgesEarnedResponse")]
        int getNumOfBadgesEarned(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNumOfBadgesEarned", ReplyAction="http://tempuri.org/IService1/getNumOfBadgesEarnedResponse")]
        System.Threading.Tasks.Task<int> getNumOfBadgesEarnedAsync(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllDailyDonations", ReplyAction="http://tempuri.org/IService1/getAllDailyDonationsResponse")]
        Project_Leap_V3.ServiceReference1.reportDonation[] getAllDailyDonations(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllDailyDonations", ReplyAction="http://tempuri.org/IService1/getAllDailyDonationsResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportDonation[]> getAllDailyDonationsAsync(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllDailyDonationsUser", ReplyAction="http://tempuri.org/IService1/getAllDailyDonationsUserResponse")]
        Project_Leap_V3.ServiceReference1.reportDonation[] getAllDailyDonationsUser(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllDailyDonationsUser", ReplyAction="http://tempuri.org/IService1/getAllDailyDonationsUserResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportDonation[]> getAllDailyDonationsUserAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getVolunteersByProvince", ReplyAction="http://tempuri.org/IService1/getVolunteersByProvinceResponse")]
        Project_Leap_V3.ServiceReference1.reportVolunteers[] getVolunteersByProvince();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getVolunteersByProvince", ReplyAction="http://tempuri.org/IService1/getVolunteersByProvinceResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportVolunteers[]> getVolunteersByProvinceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSystemFund", ReplyAction="http://tempuri.org/IService1/getSystemFundResponse")]
        Project_Leap_V3.ServiceReference1.reportDonation[] getSystemFund();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSystemFund", ReplyAction="http://tempuri.org/IService1/getSystemFundResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportDonation[]> getSystemFundAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTopBusDon", ReplyAction="http://tempuri.org/IService1/getTopBusDonResponse")]
        Project_Leap_V3.ServiceReference1.reportBusDon[] getTopBusDon();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTopBusDon", ReplyAction="http://tempuri.org/IService1/getTopBusDonResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportBusDon[]> getTopBusDonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFCReports", ReplyAction="http://tempuri.org/IService1/getFCReportsResponse")]
        Project_Leap_V3.ServiceReference1.reportFC[] getFCReports(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFCReports", ReplyAction="http://tempuri.org/IService1/getFCReportsResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportFC[]> getFCReportsAsync(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getVolsShowingUp", ReplyAction="http://tempuri.org/IService1/getVolsShowingUpResponse")]
        double getVolsShowingUp(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getVolsShowingUp", ReplyAction="http://tempuri.org/IService1/getVolsShowingUpResponse")]
        System.Threading.Tasks.Task<double> getVolsShowingUpAsync(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFCSuccessRate", ReplyAction="http://tempuri.org/IService1/getFCSuccessRateResponse")]
        double getFCSuccessRate(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFCSuccessRate", ReplyAction="http://tempuri.org/IService1/getFCSuccessRateResponse")]
        System.Threading.Tasks.Task<double> getFCSuccessRateAsync(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNPOActivity", ReplyAction="http://tempuri.org/IService1/getNPOActivityResponse")]
        Project_Leap_V3.ServiceReference1.activity[] getNPOActivity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNPOActivity", ReplyAction="http://tempuri.org/IService1/getNPOActivityResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.activity[]> getNPOActivityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MostActiveUser", ReplyAction="http://tempuri.org/IService1/MostActiveUserResponse")]
        Project_Leap_V3.ServiceReference1.reportBusDon[] MostActiveUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MostActiveUser", ReplyAction="http://tempuri.org/IService1/MostActiveUserResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportBusDon[]> MostActiveUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/targetedDonations", ReplyAction="http://tempuri.org/IService1/targetedDonationsResponse")]
        string targetedDonations(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/targetedDonations", ReplyAction="http://tempuri.org/IService1/targetedDonationsResponse")]
        System.Threading.Tasks.Task<string> targetedDonationsAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TypeMostSupportInArea", ReplyAction="http://tempuri.org/IService1/TypeMostSupportInAreaResponse")]
        Project_Leap_V3.ServiceReference1.Support TypeMostSupportInArea(string Province);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TypeMostSupportInArea", ReplyAction="http://tempuri.org/IService1/TypeMostSupportInAreaResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Support> TypeMostSupportInAreaAsync(string Province);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MostSupportByType", ReplyAction="http://tempuri.org/IService1/MostSupportByTypeResponse")]
        Project_Leap_V3.ServiceReference1.Support MostSupportByType(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MostSupportByType", ReplyAction="http://tempuri.org/IService1/MostSupportByTypeResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Support> MostSupportByTypeAsync(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MostSupportInType", ReplyAction="http://tempuri.org/IService1/MostSupportInTypeResponse")]
        Project_Leap_V3.ServiceReference1.Support[] MostSupportInType(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MostSupportInType", ReplyAction="http://tempuri.org/IService1/MostSupportInTypeResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Support[]> MostSupportInTypeAsync(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumOfOrgByIndustry", ReplyAction="http://tempuri.org/IService1/NumOfOrgByIndustryResponse")]
        int NumOfOrgByIndustry(string Industry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumOfOrgByIndustry", ReplyAction="http://tempuri.org/IService1/NumOfOrgByIndustryResponse")]
        System.Threading.Tasks.Task<int> NumOfOrgByIndustryAsync(string Industry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDailyUserRegistration", ReplyAction="http://tempuri.org/IService1/getDailyUserRegistrationResponse")]
        Project_Leap_V3.ServiceReference1.reportDonation[] getDailyUserRegistration();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDailyUserRegistration", ReplyAction="http://tempuri.org/IService1/getDailyUserRegistrationResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportDonation[]> getDailyUserRegistrationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDailyOrganisationRegistration", ReplyAction="http://tempuri.org/IService1/getDailyOrganisationRegistrationResponse")]
        Project_Leap_V3.ServiceReference1.reportDonation[] getDailyOrganisationRegistration();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDailyOrganisationRegistration", ReplyAction="http://tempuri.org/IService1/getDailyOrganisationRegistrationResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportDonation[]> getDailyOrganisationRegistrationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserBadgesCount", ReplyAction="http://tempuri.org/IService1/getUserBadgesCountResponse")]
        Project_Leap_V3.ServiceReference1.badgesReport[] getUserBadgesCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserBadgesCount", ReplyAction="http://tempuri.org/IService1/getUserBadgesCountResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.badgesReport[]> getUserBadgesCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNPORatingReport", ReplyAction="http://tempuri.org/IService1/getNPORatingReportResponse")]
        Project_Leap_V3.ServiceReference1.ratingsReport[] getNPORatingReport(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNPORatingReport", ReplyAction="http://tempuri.org/IService1/getNPORatingReportResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.ratingsReport[]> getNPORatingReportAsync(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDonationsForComparison", ReplyAction="http://tempuri.org/IService1/getDonationsForComparisonResponse")]
        Project_Leap_V3.ServiceReference1.reportDonation[] getDonationsForComparison(int orgID, string sortBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDonationsForComparison", ReplyAction="http://tempuri.org/IService1/getDonationsForComparisonResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportDonation[]> getDonationsForComparisonAsync(int orgID, string sortBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/chechForNewDonations", ReplyAction="http://tempuri.org/IService1/chechForNewDonationsResponse")]
        bool chechForNewDonations(int orgID, System.DateTime lastOnline);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/chechForNewDonations", ReplyAction="http://tempuri.org/IService1/chechForNewDonationsResponse")]
        System.Threading.Tasks.Task<bool> chechForNewDonationsAsync(int orgID, System.DateTime lastOnline);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkLiveNewDonations", ReplyAction="http://tempuri.org/IService1/checkLiveNewDonationsResponse")]
        int checkLiveNewDonations(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkLiveNewDonations", ReplyAction="http://tempuri.org/IService1/checkLiveNewDonationsResponse")]
        System.Threading.Tasks.Task<int> checkLiveNewDonationsAsync(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerIndividual", ReplyAction="http://tempuri.org/IService1/registerIndividualResponse")]
        bool registerIndividual(string email, string password, int Type, int OrgNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerIndividual", ReplyAction="http://tempuri.org/IService1/registerIndividualResponse")]
        System.Threading.Tasks.Task<bool> registerIndividualAsync(string email, string password, int Type, int OrgNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumberOfTimes", ReplyAction="http://tempuri.org/IService1/NumberOfTimesResponse")]
        int NumberOfTimes(string table, string province);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumberOfTimes", ReplyAction="http://tempuri.org/IService1/NumberOfTimesResponse")]
        System.Threading.Tasks.Task<int> NumberOfTimesAsync(string table, string province);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addOrganisation", ReplyAction="http://tempuri.org/IService1/addOrganisationResponse")]
        bool addOrganisation(long OrgNumber, string OrgName, string Street, string Suburb, string Province, string Country, string ContactNum, string Industry, int OrgType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addOrganisation", ReplyAction="http://tempuri.org/IService1/addOrganisationResponse")]
        System.Threading.Tasks.Task<bool> addOrganisationAsync(long OrgNumber, string OrgName, string Street, string Suburb, string Province, string Country, string ContactNum, string Industry, int OrgType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckDetails", ReplyAction="http://tempuri.org/IService1/CheckDetailsResponse")]
        Project_Leap_V3.ServiceReference1.UserDetail CheckDetails(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckDetails", ReplyAction="http://tempuri.org/IService1/CheckDetailsResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.UserDetail> CheckDetailsAsync(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUsers", ReplyAction="http://tempuri.org/IService1/getUsersResponse")]
        Project_Leap_V3.ServiceReference1.User[] getUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUsers", ReplyAction="http://tempuri.org/IService1/getUsersResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.User[]> getUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getOrganisations", ReplyAction="http://tempuri.org/IService1/getOrganisationsResponse")]
        Project_Leap_V3.ServiceReference1.Orga[] getOrganisations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getOrganisations", ReplyAction="http://tempuri.org/IService1/getOrganisationsResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Orga[]> getOrganisationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUser", ReplyAction="http://tempuri.org/IService1/getUserResponse")]
        Project_Leap_V3.ServiceReference1.User getUser(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUser", ReplyAction="http://tempuri.org/IService1/getUserResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.User> getUserAsync(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteUser", ReplyAction="http://tempuri.org/IService1/deleteUserResponse")]
        bool deleteUser(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteUser", ReplyAction="http://tempuri.org/IService1/deleteUserResponse")]
        System.Threading.Tasks.Task<bool> deleteUserAsync(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteOrg", ReplyAction="http://tempuri.org/IService1/deleteOrgResponse")]
        bool deleteOrg(int ordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteOrg", ReplyAction="http://tempuri.org/IService1/deleteOrgResponse")]
        System.Threading.Tasks.Task<bool> deleteOrgAsync(int ordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProfile", ReplyAction="http://tempuri.org/IService1/UpdateProfileResponse")]
        bool UpdateProfile(Project_Leap_V3.ServiceReference1.UserDetail user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProfile", ReplyAction="http://tempuri.org/IService1/UpdateProfileResponse")]
        System.Threading.Tasks.Task<bool> UpdateProfileAsync(Project_Leap_V3.ServiceReference1.UserDetail user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/verifyEmail", ReplyAction="http://tempuri.org/IService1/verifyEmailResponse")]
        bool verifyEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/verifyEmail", ReplyAction="http://tempuri.org/IService1/verifyEmailResponse")]
        System.Threading.Tasks.Task<bool> verifyEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addNewsFeed", ReplyAction="http://tempuri.org/IService1/addNewsFeedResponse")]
        string addNewsFeed(int npoID, string title, string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addNewsFeed", ReplyAction="http://tempuri.org/IService1/addNewsFeedResponse")]
        System.Threading.Tasks.Task<string> addNewsFeedAsync(int npoID, string title, string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFeeds", ReplyAction="http://tempuri.org/IService1/GetFeedsResponse")]
        Project_Leap_V3.ServiceReference1.NewsF[] GetFeeds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFeeds", ReplyAction="http://tempuri.org/IService1/GetFeedsResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.NewsF[]> GetFeedsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNPOWithManager", ReplyAction="http://tempuri.org/IService1/getNPOWithManagerResponse")]
        int getNPOWithManager(int NPOManagerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNPOWithManager", ReplyAction="http://tempuri.org/IService1/getNPOWithManagerResponse")]
        System.Threading.Tasks.Task<int> getNPOWithManagerAsync(int NPOManagerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEvent", ReplyAction="http://tempuri.org/IService1/getEventResponse")]
        Project_Leap_V3.ServiceReference1.Eve getEvent(int eventID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEvent", ReplyAction="http://tempuri.org/IService1/getEventResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Eve> getEventAsync(int eventID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEvents", ReplyAction="http://tempuri.org/IService1/getEventsResponse")]
        Project_Leap_V3.ServiceReference1.Eve[] getEvents(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEvents", ReplyAction="http://tempuri.org/IService1/getEventsResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Eve[]> getEventsAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNEvents", ReplyAction="http://tempuri.org/IService1/getNEventsResponse")]
        Project_Leap_V3.ServiceReference1.Eve[] getNEvents(int npoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNEvents", ReplyAction="http://tempuri.org/IService1/getNEventsResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Eve[]> getNEventsAsync(int npoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addEvent", ReplyAction="http://tempuri.org/IService1/addEventResponse")]
        bool addEvent(Project_Leap_V3.ServiceReference1.Eve e, int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addEvent", ReplyAction="http://tempuri.org/IService1/addEventResponse")]
        System.Threading.Tasks.Task<bool> addEventAsync(Project_Leap_V3.ServiceReference1.Eve e, int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addDonationRequest", ReplyAction="http://tempuri.org/IService1/addDonationRequestResponse")]
        bool addDonationRequest(Project_Leap_V3.ServiceReference1.DonationRequester d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addDonationRequest", ReplyAction="http://tempuri.org/IService1/addDonationRequestResponse")]
        System.Threading.Tasks.Task<bool> addDonationRequestAsync(Project_Leap_V3.ServiceReference1.DonationRequester d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllDonationRequest", ReplyAction="http://tempuri.org/IService1/getAllDonationRequestResponse")]
        Project_Leap_V3.ServiceReference1.DonationRequester[] getAllDonationRequest(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllDonationRequest", ReplyAction="http://tempuri.org/IService1/getAllDonationRequestResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.DonationRequester[]> getAllDonationRequestAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllNDonationRequest", ReplyAction="http://tempuri.org/IService1/getAllNDonationRequestResponse")]
        Project_Leap_V3.ServiceReference1.DonationRequester[] getAllNDonationRequest(int npoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllNDonationRequest", ReplyAction="http://tempuri.org/IService1/getAllNDonationRequestResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.DonationRequester[]> getAllNDonationRequestAsync(int npoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/hasDonatatedReq", ReplyAction="http://tempuri.org/IService1/hasDonatatedReqResponse")]
        bool hasDonatatedReq(int donationRequID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/hasDonatatedReq", ReplyAction="http://tempuri.org/IService1/hasDonatatedReqResponse")]
        System.Threading.Tasks.Task<bool> hasDonatatedReqAsync(int donationRequID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePassword", ReplyAction="http://tempuri.org/IService1/UpdatePasswordResponse")]
        bool UpdatePassword(string password, int User_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePassword", ReplyAction="http://tempuri.org/IService1/UpdatePasswordResponse")]
        System.Threading.Tasks.Task<bool> UpdatePasswordAsync(string password, int User_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserID", ReplyAction="http://tempuri.org/IService1/getUserIDResponse")]
        int getUserID(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserID", ReplyAction="http://tempuri.org/IService1/getUserIDResponse")]
        System.Threading.Tasks.Task<int> getUserIDAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addDonation", ReplyAction="http://tempuri.org/IService1/addDonationResponse")]
        bool addDonation(int UserId, Project_Leap_V3.ServiceReference1.DonationRequester donation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addDonation", ReplyAction="http://tempuri.org/IService1/addDonationResponse")]
        System.Threading.Tasks.Task<bool> addDonationAsync(int UserId, Project_Leap_V3.ServiceReference1.DonationRequester donation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDonation", ReplyAction="http://tempuri.org/IService1/getDonationResponse")]
        Project_Leap_V3.ServiceReference1.DonationRequester getDonation(int donationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDonation", ReplyAction="http://tempuri.org/IService1/getDonationResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.DonationRequester> getDonationAsync(int donationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDonationUser", ReplyAction="http://tempuri.org/IService1/getDonationUserResponse")]
        Project_Leap_V3.ServiceReference1.DonationUser[] getDonationUser(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDonationUser", ReplyAction="http://tempuri.org/IService1/getDonationUserResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.DonationUser[]> getDonationUserAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getOrg", ReplyAction="http://tempuri.org/IService1/getOrgResponse")]
        Project_Leap_V3.ServiceReference1.Organisation getOrg(int oID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getOrg", ReplyAction="http://tempuri.org/IService1/getOrgResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Organisation> getOrgAsync(int oID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDonorEmails", ReplyAction="http://tempuri.org/IService1/getDonorEmailsResponse")]
        string[] getDonorEmails(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDonorEmails", ReplyAction="http://tempuri.org/IService1/getDonorEmailsResponse")]
        System.Threading.Tasks.Task<string[]> getDonorEmailsAsync(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setRSVP", ReplyAction="http://tempuri.org/IService1/setRSVPResponse")]
        bool setRSVP(Project_Leap_V3.ServiceReference1.RSVPEvent rsvp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setRSVP", ReplyAction="http://tempuri.org/IService1/setRSVPResponse")]
        System.Threading.Tasks.Task<bool> setRSVPAsync(Project_Leap_V3.ServiceReference1.RSVPEvent rsvp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEventUser", ReplyAction="http://tempuri.org/IService1/getEventUserResponse")]
        Project_Leap_V3.ServiceReference1.RSVPEvent[] getEventUser(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEventUser", ReplyAction="http://tempuri.org/IService1/getEventUserResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.RSVPEvent[]> getEventUserAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getGetRSVPList", ReplyAction="http://tempuri.org/IService1/getGetRSVPListResponse")]
        Project_Leap_V3.ServiceReference1.RSVPEvent[] getGetRSVPList(int npoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getGetRSVPList", ReplyAction="http://tempuri.org/IService1/getGetRSVPListResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.RSVPEvent[]> getGetRSVPListAsync(int npoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setVolunteer", ReplyAction="http://tempuri.org/IService1/setVolunteerResponse")]
        bool setVolunteer(Project_Leap_V3.ServiceReference1.EventVolunteer vol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setVolunteer", ReplyAction="http://tempuri.org/IService1/setVolunteerResponse")]
        System.Threading.Tasks.Task<bool> setVolunteerAsync(Project_Leap_V3.ServiceReference1.EventVolunteer vol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getVolunteerUser", ReplyAction="http://tempuri.org/IService1/getVolunteerUserResponse")]
        Project_Leap_V3.ServiceReference1.EventVolunteer[] getVolunteerUser(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getVolunteerUser", ReplyAction="http://tempuri.org/IService1/getVolunteerUserResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.EventVolunteer[]> getVolunteerUserAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getVolunteers", ReplyAction="http://tempuri.org/IService1/getVolunteersResponse")]
        Project_Leap_V3.ServiceReference1.EventVolunteer[] getVolunteers(int npoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getVolunteers", ReplyAction="http://tempuri.org/IService1/getVolunteersResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.EventVolunteer[]> getVolunteersAsync(int npoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CommentOnVolunteer", ReplyAction="http://tempuri.org/IService1/CommentOnVolunteerResponse")]
        bool CommentOnVolunteer(Project_Leap_V3.ServiceReference1.EventVolunteer volunteer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CommentOnVolunteer", ReplyAction="http://tempuri.org/IService1/CommentOnVolunteerResponse")]
        System.Threading.Tasks.Task<bool> CommentOnVolunteerAsync(Project_Leap_V3.ServiceReference1.EventVolunteer volunteer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewFundraisingCamp", ReplyAction="http://tempuri.org/IService1/AddNewFundraisingCampResponse")]
        bool AddNewFundraisingCamp(Project_Leap_V3.ServiceReference1.cFundraisingCampaign newFC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewFundraisingCamp", ReplyAction="http://tempuri.org/IService1/AddNewFundraisingCampResponse")]
        System.Threading.Tasks.Task<bool> AddNewFundraisingCampAsync(Project_Leap_V3.ServiceReference1.cFundraisingCampaign newFC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFundRaisingCampaign", ReplyAction="http://tempuri.org/IService1/getFundRaisingCampaignResponse")]
        Project_Leap_V3.ServiceReference1.cFundraisingCampaign getFundRaisingCampaign(int FC_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFundRaisingCampaign", ReplyAction="http://tempuri.org/IService1/getFundRaisingCampaignResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.cFundraisingCampaign> getFundRaisingCampaignAsync(int FC_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DonateFC", ReplyAction="http://tempuri.org/IService1/DonateFCResponse")]
        bool DonateFC(int FC_ID, int Doner_ID, double Amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DonateFC", ReplyAction="http://tempuri.org/IService1/DonateFCResponse")]
        System.Threading.Tasks.Task<bool> DonateFCAsync(int FC_ID, int Doner_ID, double Amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAmountSystemGenerated", ReplyAction="http://tempuri.org/IService1/getAmountSystemGeneratedResponse")]
        double getAmountSystemGenerated();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAmountSystemGenerated", ReplyAction="http://tempuri.org/IService1/getAmountSystemGeneratedResponse")]
        System.Threading.Tasks.Task<double> getAmountSystemGeneratedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getVerificationStatus", ReplyAction="http://tempuri.org/IService1/getVerificationStatusResponse")]
        bool getVerificationStatus(int orgNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getVerificationStatus", ReplyAction="http://tempuri.org/IService1/getVerificationStatusResponse")]
        System.Threading.Tasks.Task<bool> getVerificationStatusAsync(int orgNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPointsInd", ReplyAction="http://tempuri.org/IService1/getPointsIndResponse")]
        int getPointsInd(int indID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPointsInd", ReplyAction="http://tempuri.org/IService1/getPointsIndResponse")]
        System.Threading.Tasks.Task<int> getPointsIndAsync(int indID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPointsOrg", ReplyAction="http://tempuri.org/IService1/getPointsOrgResponse")]
        int getPointsOrg(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPointsOrg", ReplyAction="http://tempuri.org/IService1/getPointsOrgResponse")]
        System.Threading.Tasks.Task<int> getPointsOrgAsync(int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllFundRaisingCampaign", ReplyAction="http://tempuri.org/IService1/getAllFundRaisingCampaignResponse")]
        Project_Leap_V3.ServiceReference1.cFundraisingCampaign[] getAllFundRaisingCampaign(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllFundRaisingCampaign", ReplyAction="http://tempuri.org/IService1/getAllFundRaisingCampaignResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.cFundraisingCampaign[]> getAllFundRaisingCampaignAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getOwnFundraisingCampaigns", ReplyAction="http://tempuri.org/IService1/getOwnFundraisingCampaignsResponse")]
        Project_Leap_V3.ServiceReference1.cFundraisingCampaign[] getOwnFundraisingCampaigns(int NPOID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getOwnFundraisingCampaigns", ReplyAction="http://tempuri.org/IService1/getOwnFundraisingCampaignsResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.cFundraisingCampaign[]> getOwnFundraisingCampaignsAsync(int NPOID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNPOTypes", ReplyAction="http://tempuri.org/IService1/getNPOTypesResponse")]
        string[] getNPOTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNPOTypes", ReplyAction="http://tempuri.org/IService1/getNPOTypesResponse")]
        System.Threading.Tasks.Task<string[]> getNPOTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNPOofType", ReplyAction="http://tempuri.org/IService1/getNPOofTypeResponse")]
        Project_Leap_V3.ServiceReference1.Orga[] getNPOofType(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNPOofType", ReplyAction="http://tempuri.org/IService1/getNPOofTypeResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Orga[]> getNPOofTypeAsync(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetFeedback", ReplyAction="http://tempuri.org/IService1/SetFeedbackResponse")]
        bool SetFeedback(int Rate, string Review, int UserID, int OrgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetFeedback", ReplyAction="http://tempuri.org/IService1/SetFeedbackResponse")]
        System.Threading.Tasks.Task<bool> SetFeedbackAsync(int Rate, string Review, int UserID, int OrgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAverageRating", ReplyAction="http://tempuri.org/IService1/getAverageRatingResponse")]
        double getAverageRating(int Id_NPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAverageRating", ReplyAction="http://tempuri.org/IService1/getAverageRatingResponse")]
        System.Threading.Tasks.Task<double> getAverageRatingAsync(int Id_NPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setFile", ReplyAction="http://tempuri.org/IService1/setFileResponse")]
        bool setFile(Project_Leap_V3.ServiceReference1.FileClass clientFile, string loc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setFile", ReplyAction="http://tempuri.org/IService1/setFileResponse")]
        System.Threading.Tasks.Task<bool> setFileAsync(Project_Leap_V3.ServiceReference1.FileClass clientFile, string loc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUserImage", ReplyAction="http://tempuri.org/IService1/addUserImageResponse")]
        bool addUserImage(Project_Leap_V3.ServiceReference1.FileClass userImage, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUserImage", ReplyAction="http://tempuri.org/IService1/addUserImageResponse")]
        System.Threading.Tasks.Task<bool> addUserImageAsync(Project_Leap_V3.ServiceReference1.FileClass userImage, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addOrgImage", ReplyAction="http://tempuri.org/IService1/addOrgImageResponse")]
        bool addOrgImage(Project_Leap_V3.ServiceReference1.FileClass orgImage, int orgNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addOrgImage", ReplyAction="http://tempuri.org/IService1/addOrgImageResponse")]
        System.Threading.Tasks.Task<bool> addOrgImageAsync(Project_Leap_V3.ServiceReference1.FileClass orgImage, int orgNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addOrgFile", ReplyAction="http://tempuri.org/IService1/addOrgFileResponse")]
        bool addOrgFile(Project_Leap_V3.ServiceReference1.FileClass orgFile, int ogNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addOrgFile", ReplyAction="http://tempuri.org/IService1/addOrgFileResponse")]
        System.Threading.Tasks.Task<bool> addOrgFileAsync(Project_Leap_V3.ServiceReference1.FileClass orgFile, int ogNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserImage", ReplyAction="http://tempuri.org/IService1/getUserImageResponse")]
        Project_Leap_V3.ServiceReference1.FileClass getUserImage(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserImage", ReplyAction="http://tempuri.org/IService1/getUserImageResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.FileClass> getUserImageAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFile", ReplyAction="http://tempuri.org/IService1/getFileResponse")]
        Project_Leap_V3.ServiceReference1.FileClass getFile(int orgID, bool Image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFile", ReplyAction="http://tempuri.org/IService1/getFileResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.FileClass> getFileAsync(int orgID, bool Image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/verifyOrg", ReplyAction="http://tempuri.org/IService1/verifyOrgResponse")]
        bool verifyOrg(int OrgID, bool verify);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/verifyOrg", ReplyAction="http://tempuri.org/IService1/verifyOrgResponse")]
        System.Threading.Tasks.Task<bool> verifyOrgAsync(int OrgID, bool verify);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TotalRecievedFromDonations", ReplyAction="http://tempuri.org/IService1/TotalRecievedFromDonationsResponse")]
        double TotalRecievedFromDonations(int OrgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TotalRecievedFromDonations", ReplyAction="http://tempuri.org/IService1/TotalRecievedFromDonationsResponse")]
        System.Threading.Tasks.Task<double> TotalRecievedFromDonationsAsync(int OrgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TotalDonated", ReplyAction="http://tempuri.org/IService1/TotalDonatedResponse")]
        double TotalDonated(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TotalDonated", ReplyAction="http://tempuri.org/IService1/TotalDonatedResponse")]
        System.Threading.Tasks.Task<double> TotalDonatedAsync(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNextEvent", ReplyAction="http://tempuri.org/IService1/GetNextEventResponse")]
        Project_Leap_V3.ServiceReference1.mobileEve GetNextEvent(int OrgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNextEvent", ReplyAction="http://tempuri.org/IService1/GetNextEventResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.mobileEve> GetNextEventAsync(int OrgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTotalFCProgress", ReplyAction="http://tempuri.org/IService1/GetTotalFCProgressResponse")]
        Project_Leap_V3.ServiceReference1.mobileFC GetTotalFCProgress(int OrgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTotalFCProgress", ReplyAction="http://tempuri.org/IService1/GetTotalFCProgressResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.mobileFC> GetTotalFCProgressAsync(int OrgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMobileEvents", ReplyAction="http://tempuri.org/IService1/GetMobileEventsResponse")]
        Project_Leap_V3.ServiceReference1.mobileEve[] GetMobileEvents(int OrgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMobileEvents", ReplyAction="http://tempuri.org/IService1/GetMobileEventsResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.mobileEve[]> GetMobileEventsAsync(int OrgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNextVolunteer", ReplyAction="http://tempuri.org/IService1/getNextVolunteerResponse")]
        Project_Leap_V3.ServiceReference1.EventVolunteer getNextVolunteer(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNextVolunteer", ReplyAction="http://tempuri.org/IService1/getNextVolunteerResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.EventVolunteer> getNextVolunteerAsync(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNextNPOEvent", ReplyAction="http://tempuri.org/IService1/getNextNPOEventResponse")]
        Project_Leap_V3.ServiceReference1.mobileEve getNextNPOEvent(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNextNPOEvent", ReplyAction="http://tempuri.org/IService1/getNextNPOEventResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.mobileEve> getNextNPOEventAsync(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMobileEventsAtt", ReplyAction="http://tempuri.org/IService1/GetMobileEventsAttResponse")]
        Project_Leap_V3.ServiceReference1.mobileEve[] GetMobileEventsAtt(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMobileEventsAtt", ReplyAction="http://tempuri.org/IService1/GetMobileEventsAttResponse")]
        System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.mobileEve[]> GetMobileEventsAttAsync(int userID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Project_Leap_V3.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Project_Leap_V3.ServiceReference1.IService1>, Project_Leap_V3.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CaptureVolTimeMobile(int volID, int hours, string comment) {
            return base.Channel.CaptureVolTimeMobile(volID, hours, comment);
        }
        
        public System.Threading.Tasks.Task<bool> CaptureVolTimeMobileAsync(int volID, int hours, string comment) {
            return base.Channel.CaptureVolTimeMobileAsync(volID, hours, comment);
        }
        
        public bool checkBadge(int userID, int BadgeID) {
            return base.Channel.checkBadge(userID, BadgeID);
        }
        
        public System.Threading.Tasks.Task<bool> checkBadgeAsync(int userID, int BadgeID) {
            return base.Channel.checkBadgeAsync(userID, BadgeID);
        }
        
        public int getNumOfBadgesEarned(int UserID) {
            return base.Channel.getNumOfBadgesEarned(UserID);
        }
        
        public System.Threading.Tasks.Task<int> getNumOfBadgesEarnedAsync(int UserID) {
            return base.Channel.getNumOfBadgesEarnedAsync(UserID);
        }
        
        public Project_Leap_V3.ServiceReference1.reportDonation[] getAllDailyDonations(int orgID) {
            return base.Channel.getAllDailyDonations(orgID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportDonation[]> getAllDailyDonationsAsync(int orgID) {
            return base.Channel.getAllDailyDonationsAsync(orgID);
        }
        
        public Project_Leap_V3.ServiceReference1.reportDonation[] getAllDailyDonationsUser(int userID) {
            return base.Channel.getAllDailyDonationsUser(userID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportDonation[]> getAllDailyDonationsUserAsync(int userID) {
            return base.Channel.getAllDailyDonationsUserAsync(userID);
        }
        
        public Project_Leap_V3.ServiceReference1.reportVolunteers[] getVolunteersByProvince() {
            return base.Channel.getVolunteersByProvince();
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportVolunteers[]> getVolunteersByProvinceAsync() {
            return base.Channel.getVolunteersByProvinceAsync();
        }
        
        public Project_Leap_V3.ServiceReference1.reportDonation[] getSystemFund() {
            return base.Channel.getSystemFund();
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportDonation[]> getSystemFundAsync() {
            return base.Channel.getSystemFundAsync();
        }
        
        public Project_Leap_V3.ServiceReference1.reportBusDon[] getTopBusDon() {
            return base.Channel.getTopBusDon();
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportBusDon[]> getTopBusDonAsync() {
            return base.Channel.getTopBusDonAsync();
        }
        
        public Project_Leap_V3.ServiceReference1.reportFC[] getFCReports(int orgID) {
            return base.Channel.getFCReports(orgID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportFC[]> getFCReportsAsync(int orgID) {
            return base.Channel.getFCReportsAsync(orgID);
        }
        
        public double getVolsShowingUp(int orgID) {
            return base.Channel.getVolsShowingUp(orgID);
        }
        
        public System.Threading.Tasks.Task<double> getVolsShowingUpAsync(int orgID) {
            return base.Channel.getVolsShowingUpAsync(orgID);
        }
        
        public double getFCSuccessRate(int orgID) {
            return base.Channel.getFCSuccessRate(orgID);
        }
        
        public System.Threading.Tasks.Task<double> getFCSuccessRateAsync(int orgID) {
            return base.Channel.getFCSuccessRateAsync(orgID);
        }
        
        public Project_Leap_V3.ServiceReference1.activity[] getNPOActivity() {
            return base.Channel.getNPOActivity();
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.activity[]> getNPOActivityAsync() {
            return base.Channel.getNPOActivityAsync();
        }
        
        public Project_Leap_V3.ServiceReference1.reportBusDon[] MostActiveUser() {
            return base.Channel.MostActiveUser();
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportBusDon[]> MostActiveUserAsync() {
            return base.Channel.MostActiveUserAsync();
        }
        
        public string targetedDonations(int userID) {
            return base.Channel.targetedDonations(userID);
        }
        
        public System.Threading.Tasks.Task<string> targetedDonationsAsync(int userID) {
            return base.Channel.targetedDonationsAsync(userID);
        }
        
        public Project_Leap_V3.ServiceReference1.Support TypeMostSupportInArea(string Province) {
            return base.Channel.TypeMostSupportInArea(Province);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Support> TypeMostSupportInAreaAsync(string Province) {
            return base.Channel.TypeMostSupportInAreaAsync(Province);
        }
        
        public Project_Leap_V3.ServiceReference1.Support MostSupportByType(string Type) {
            return base.Channel.MostSupportByType(Type);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Support> MostSupportByTypeAsync(string Type) {
            return base.Channel.MostSupportByTypeAsync(Type);
        }
        
        public Project_Leap_V3.ServiceReference1.Support[] MostSupportInType(string Type) {
            return base.Channel.MostSupportInType(Type);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Support[]> MostSupportInTypeAsync(string Type) {
            return base.Channel.MostSupportInTypeAsync(Type);
        }
        
        public int NumOfOrgByIndustry(string Industry) {
            return base.Channel.NumOfOrgByIndustry(Industry);
        }
        
        public System.Threading.Tasks.Task<int> NumOfOrgByIndustryAsync(string Industry) {
            return base.Channel.NumOfOrgByIndustryAsync(Industry);
        }
        
        public Project_Leap_V3.ServiceReference1.reportDonation[] getDailyUserRegistration() {
            return base.Channel.getDailyUserRegistration();
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportDonation[]> getDailyUserRegistrationAsync() {
            return base.Channel.getDailyUserRegistrationAsync();
        }
        
        public Project_Leap_V3.ServiceReference1.reportDonation[] getDailyOrganisationRegistration() {
            return base.Channel.getDailyOrganisationRegistration();
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportDonation[]> getDailyOrganisationRegistrationAsync() {
            return base.Channel.getDailyOrganisationRegistrationAsync();
        }
        
        public Project_Leap_V3.ServiceReference1.badgesReport[] getUserBadgesCount() {
            return base.Channel.getUserBadgesCount();
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.badgesReport[]> getUserBadgesCountAsync() {
            return base.Channel.getUserBadgesCountAsync();
        }
        
        public Project_Leap_V3.ServiceReference1.ratingsReport[] getNPORatingReport(int orgID) {
            return base.Channel.getNPORatingReport(orgID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.ratingsReport[]> getNPORatingReportAsync(int orgID) {
            return base.Channel.getNPORatingReportAsync(orgID);
        }
        
        public Project_Leap_V3.ServiceReference1.reportDonation[] getDonationsForComparison(int orgID, string sortBy) {
            return base.Channel.getDonationsForComparison(orgID, sortBy);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.reportDonation[]> getDonationsForComparisonAsync(int orgID, string sortBy) {
            return base.Channel.getDonationsForComparisonAsync(orgID, sortBy);
        }
        
        public bool chechForNewDonations(int orgID, System.DateTime lastOnline) {
            return base.Channel.chechForNewDonations(orgID, lastOnline);
        }
        
        public System.Threading.Tasks.Task<bool> chechForNewDonationsAsync(int orgID, System.DateTime lastOnline) {
            return base.Channel.chechForNewDonationsAsync(orgID, lastOnline);
        }
        
        public int checkLiveNewDonations(int orgID) {
            return base.Channel.checkLiveNewDonations(orgID);
        }
        
        public System.Threading.Tasks.Task<int> checkLiveNewDonationsAsync(int orgID) {
            return base.Channel.checkLiveNewDonationsAsync(orgID);
        }
        
        public bool registerIndividual(string email, string password, int Type, int OrgNumber) {
            return base.Channel.registerIndividual(email, password, Type, OrgNumber);
        }
        
        public System.Threading.Tasks.Task<bool> registerIndividualAsync(string email, string password, int Type, int OrgNumber) {
            return base.Channel.registerIndividualAsync(email, password, Type, OrgNumber);
        }
        
        public int NumberOfTimes(string table, string province) {
            return base.Channel.NumberOfTimes(table, province);
        }
        
        public System.Threading.Tasks.Task<int> NumberOfTimesAsync(string table, string province) {
            return base.Channel.NumberOfTimesAsync(table, province);
        }
        
        public bool addOrganisation(long OrgNumber, string OrgName, string Street, string Suburb, string Province, string Country, string ContactNum, string Industry, int OrgType) {
            return base.Channel.addOrganisation(OrgNumber, OrgName, Street, Suburb, Province, Country, ContactNum, Industry, OrgType);
        }
        
        public System.Threading.Tasks.Task<bool> addOrganisationAsync(long OrgNumber, string OrgName, string Street, string Suburb, string Province, string Country, string ContactNum, string Industry, int OrgType) {
            return base.Channel.addOrganisationAsync(OrgNumber, OrgName, Street, Suburb, Province, Country, ContactNum, Industry, OrgType);
        }
        
        public Project_Leap_V3.ServiceReference1.UserDetail CheckDetails(string Email, string Password) {
            return base.Channel.CheckDetails(Email, Password);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.UserDetail> CheckDetailsAsync(string Email, string Password) {
            return base.Channel.CheckDetailsAsync(Email, Password);
        }
        
        public Project_Leap_V3.ServiceReference1.User[] getUsers() {
            return base.Channel.getUsers();
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.User[]> getUsersAsync() {
            return base.Channel.getUsersAsync();
        }
        
        public Project_Leap_V3.ServiceReference1.Orga[] getOrganisations() {
            return base.Channel.getOrganisations();
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Orga[]> getOrganisationsAsync() {
            return base.Channel.getOrganisationsAsync();
        }
        
        public Project_Leap_V3.ServiceReference1.User getUser(int UserID) {
            return base.Channel.getUser(UserID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.User> getUserAsync(int UserID) {
            return base.Channel.getUserAsync(UserID);
        }
        
        public bool deleteUser(int UserID) {
            return base.Channel.deleteUser(UserID);
        }
        
        public System.Threading.Tasks.Task<bool> deleteUserAsync(int UserID) {
            return base.Channel.deleteUserAsync(UserID);
        }
        
        public bool deleteOrg(int ordID) {
            return base.Channel.deleteOrg(ordID);
        }
        
        public System.Threading.Tasks.Task<bool> deleteOrgAsync(int ordID) {
            return base.Channel.deleteOrgAsync(ordID);
        }
        
        public bool UpdateProfile(Project_Leap_V3.ServiceReference1.UserDetail user) {
            return base.Channel.UpdateProfile(user);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProfileAsync(Project_Leap_V3.ServiceReference1.UserDetail user) {
            return base.Channel.UpdateProfileAsync(user);
        }
        
        public bool verifyEmail(string email) {
            return base.Channel.verifyEmail(email);
        }
        
        public System.Threading.Tasks.Task<bool> verifyEmailAsync(string email) {
            return base.Channel.verifyEmailAsync(email);
        }
        
        public string addNewsFeed(int npoID, string title, string body) {
            return base.Channel.addNewsFeed(npoID, title, body);
        }
        
        public System.Threading.Tasks.Task<string> addNewsFeedAsync(int npoID, string title, string body) {
            return base.Channel.addNewsFeedAsync(npoID, title, body);
        }
        
        public Project_Leap_V3.ServiceReference1.NewsF[] GetFeeds() {
            return base.Channel.GetFeeds();
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.NewsF[]> GetFeedsAsync() {
            return base.Channel.GetFeedsAsync();
        }
        
        public int getNPOWithManager(int NPOManagerID) {
            return base.Channel.getNPOWithManager(NPOManagerID);
        }
        
        public System.Threading.Tasks.Task<int> getNPOWithManagerAsync(int NPOManagerID) {
            return base.Channel.getNPOWithManagerAsync(NPOManagerID);
        }
        
        public Project_Leap_V3.ServiceReference1.Eve getEvent(int eventID) {
            return base.Channel.getEvent(eventID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Eve> getEventAsync(int eventID) {
            return base.Channel.getEventAsync(eventID);
        }
        
        public Project_Leap_V3.ServiceReference1.Eve[] getEvents(int userID) {
            return base.Channel.getEvents(userID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Eve[]> getEventsAsync(int userID) {
            return base.Channel.getEventsAsync(userID);
        }
        
        public Project_Leap_V3.ServiceReference1.Eve[] getNEvents(int npoID) {
            return base.Channel.getNEvents(npoID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Eve[]> getNEventsAsync(int npoID) {
            return base.Channel.getNEventsAsync(npoID);
        }
        
        public bool addEvent(Project_Leap_V3.ServiceReference1.Eve e, int orgID) {
            return base.Channel.addEvent(e, orgID);
        }
        
        public System.Threading.Tasks.Task<bool> addEventAsync(Project_Leap_V3.ServiceReference1.Eve e, int orgID) {
            return base.Channel.addEventAsync(e, orgID);
        }
        
        public bool addDonationRequest(Project_Leap_V3.ServiceReference1.DonationRequester d) {
            return base.Channel.addDonationRequest(d);
        }
        
        public System.Threading.Tasks.Task<bool> addDonationRequestAsync(Project_Leap_V3.ServiceReference1.DonationRequester d) {
            return base.Channel.addDonationRequestAsync(d);
        }
        
        public Project_Leap_V3.ServiceReference1.DonationRequester[] getAllDonationRequest(int userID) {
            return base.Channel.getAllDonationRequest(userID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.DonationRequester[]> getAllDonationRequestAsync(int userID) {
            return base.Channel.getAllDonationRequestAsync(userID);
        }
        
        public Project_Leap_V3.ServiceReference1.DonationRequester[] getAllNDonationRequest(int npoID) {
            return base.Channel.getAllNDonationRequest(npoID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.DonationRequester[]> getAllNDonationRequestAsync(int npoID) {
            return base.Channel.getAllNDonationRequestAsync(npoID);
        }
        
        public bool hasDonatatedReq(int donationRequID) {
            return base.Channel.hasDonatatedReq(donationRequID);
        }
        
        public System.Threading.Tasks.Task<bool> hasDonatatedReqAsync(int donationRequID) {
            return base.Channel.hasDonatatedReqAsync(donationRequID);
        }
        
        public bool UpdatePassword(string password, int User_ID) {
            return base.Channel.UpdatePassword(password, User_ID);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePasswordAsync(string password, int User_ID) {
            return base.Channel.UpdatePasswordAsync(password, User_ID);
        }
        
        public int getUserID(string email) {
            return base.Channel.getUserID(email);
        }
        
        public System.Threading.Tasks.Task<int> getUserIDAsync(string email) {
            return base.Channel.getUserIDAsync(email);
        }
        
        public bool addDonation(int UserId, Project_Leap_V3.ServiceReference1.DonationRequester donation) {
            return base.Channel.addDonation(UserId, donation);
        }
        
        public System.Threading.Tasks.Task<bool> addDonationAsync(int UserId, Project_Leap_V3.ServiceReference1.DonationRequester donation) {
            return base.Channel.addDonationAsync(UserId, donation);
        }
        
        public Project_Leap_V3.ServiceReference1.DonationRequester getDonation(int donationID) {
            return base.Channel.getDonation(donationID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.DonationRequester> getDonationAsync(int donationID) {
            return base.Channel.getDonationAsync(donationID);
        }
        
        public Project_Leap_V3.ServiceReference1.DonationUser[] getDonationUser(int userID) {
            return base.Channel.getDonationUser(userID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.DonationUser[]> getDonationUserAsync(int userID) {
            return base.Channel.getDonationUserAsync(userID);
        }
        
        public Project_Leap_V3.ServiceReference1.Organisation getOrg(int oID) {
            return base.Channel.getOrg(oID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Organisation> getOrgAsync(int oID) {
            return base.Channel.getOrgAsync(oID);
        }
        
        public string[] getDonorEmails(int orgID) {
            return base.Channel.getDonorEmails(orgID);
        }
        
        public System.Threading.Tasks.Task<string[]> getDonorEmailsAsync(int orgID) {
            return base.Channel.getDonorEmailsAsync(orgID);
        }
        
        public bool setRSVP(Project_Leap_V3.ServiceReference1.RSVPEvent rsvp) {
            return base.Channel.setRSVP(rsvp);
        }
        
        public System.Threading.Tasks.Task<bool> setRSVPAsync(Project_Leap_V3.ServiceReference1.RSVPEvent rsvp) {
            return base.Channel.setRSVPAsync(rsvp);
        }
        
        public Project_Leap_V3.ServiceReference1.RSVPEvent[] getEventUser(int userID) {
            return base.Channel.getEventUser(userID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.RSVPEvent[]> getEventUserAsync(int userID) {
            return base.Channel.getEventUserAsync(userID);
        }
        
        public Project_Leap_V3.ServiceReference1.RSVPEvent[] getGetRSVPList(int npoID) {
            return base.Channel.getGetRSVPList(npoID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.RSVPEvent[]> getGetRSVPListAsync(int npoID) {
            return base.Channel.getGetRSVPListAsync(npoID);
        }
        
        public bool setVolunteer(Project_Leap_V3.ServiceReference1.EventVolunteer vol) {
            return base.Channel.setVolunteer(vol);
        }
        
        public System.Threading.Tasks.Task<bool> setVolunteerAsync(Project_Leap_V3.ServiceReference1.EventVolunteer vol) {
            return base.Channel.setVolunteerAsync(vol);
        }
        
        public Project_Leap_V3.ServiceReference1.EventVolunteer[] getVolunteerUser(int userID) {
            return base.Channel.getVolunteerUser(userID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.EventVolunteer[]> getVolunteerUserAsync(int userID) {
            return base.Channel.getVolunteerUserAsync(userID);
        }
        
        public Project_Leap_V3.ServiceReference1.EventVolunteer[] getVolunteers(int npoID) {
            return base.Channel.getVolunteers(npoID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.EventVolunteer[]> getVolunteersAsync(int npoID) {
            return base.Channel.getVolunteersAsync(npoID);
        }
        
        public bool CommentOnVolunteer(Project_Leap_V3.ServiceReference1.EventVolunteer volunteer) {
            return base.Channel.CommentOnVolunteer(volunteer);
        }
        
        public System.Threading.Tasks.Task<bool> CommentOnVolunteerAsync(Project_Leap_V3.ServiceReference1.EventVolunteer volunteer) {
            return base.Channel.CommentOnVolunteerAsync(volunteer);
        }
        
        public bool AddNewFundraisingCamp(Project_Leap_V3.ServiceReference1.cFundraisingCampaign newFC) {
            return base.Channel.AddNewFundraisingCamp(newFC);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewFundraisingCampAsync(Project_Leap_V3.ServiceReference1.cFundraisingCampaign newFC) {
            return base.Channel.AddNewFundraisingCampAsync(newFC);
        }
        
        public Project_Leap_V3.ServiceReference1.cFundraisingCampaign getFundRaisingCampaign(int FC_id) {
            return base.Channel.getFundRaisingCampaign(FC_id);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.cFundraisingCampaign> getFundRaisingCampaignAsync(int FC_id) {
            return base.Channel.getFundRaisingCampaignAsync(FC_id);
        }
        
        public bool DonateFC(int FC_ID, int Doner_ID, double Amount) {
            return base.Channel.DonateFC(FC_ID, Doner_ID, Amount);
        }
        
        public System.Threading.Tasks.Task<bool> DonateFCAsync(int FC_ID, int Doner_ID, double Amount) {
            return base.Channel.DonateFCAsync(FC_ID, Doner_ID, Amount);
        }
        
        public double getAmountSystemGenerated() {
            return base.Channel.getAmountSystemGenerated();
        }
        
        public System.Threading.Tasks.Task<double> getAmountSystemGeneratedAsync() {
            return base.Channel.getAmountSystemGeneratedAsync();
        }
        
        public bool getVerificationStatus(int orgNum) {
            return base.Channel.getVerificationStatus(orgNum);
        }
        
        public System.Threading.Tasks.Task<bool> getVerificationStatusAsync(int orgNum) {
            return base.Channel.getVerificationStatusAsync(orgNum);
        }
        
        public int getPointsInd(int indID) {
            return base.Channel.getPointsInd(indID);
        }
        
        public System.Threading.Tasks.Task<int> getPointsIndAsync(int indID) {
            return base.Channel.getPointsIndAsync(indID);
        }
        
        public int getPointsOrg(int orgID) {
            return base.Channel.getPointsOrg(orgID);
        }
        
        public System.Threading.Tasks.Task<int> getPointsOrgAsync(int orgID) {
            return base.Channel.getPointsOrgAsync(orgID);
        }
        
        public Project_Leap_V3.ServiceReference1.cFundraisingCampaign[] getAllFundRaisingCampaign(int userID) {
            return base.Channel.getAllFundRaisingCampaign(userID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.cFundraisingCampaign[]> getAllFundRaisingCampaignAsync(int userID) {
            return base.Channel.getAllFundRaisingCampaignAsync(userID);
        }
        
        public Project_Leap_V3.ServiceReference1.cFundraisingCampaign[] getOwnFundraisingCampaigns(int NPOID) {
            return base.Channel.getOwnFundraisingCampaigns(NPOID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.cFundraisingCampaign[]> getOwnFundraisingCampaignsAsync(int NPOID) {
            return base.Channel.getOwnFundraisingCampaignsAsync(NPOID);
        }
        
        public string[] getNPOTypes() {
            return base.Channel.getNPOTypes();
        }
        
        public System.Threading.Tasks.Task<string[]> getNPOTypesAsync() {
            return base.Channel.getNPOTypesAsync();
        }
        
        public Project_Leap_V3.ServiceReference1.Orga[] getNPOofType(string type) {
            return base.Channel.getNPOofType(type);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.Orga[]> getNPOofTypeAsync(string type) {
            return base.Channel.getNPOofTypeAsync(type);
        }
        
        public bool SetFeedback(int Rate, string Review, int UserID, int OrgID) {
            return base.Channel.SetFeedback(Rate, Review, UserID, OrgID);
        }
        
        public System.Threading.Tasks.Task<bool> SetFeedbackAsync(int Rate, string Review, int UserID, int OrgID) {
            return base.Channel.SetFeedbackAsync(Rate, Review, UserID, OrgID);
        }
        
        public double getAverageRating(int Id_NPO) {
            return base.Channel.getAverageRating(Id_NPO);
        }
        
        public System.Threading.Tasks.Task<double> getAverageRatingAsync(int Id_NPO) {
            return base.Channel.getAverageRatingAsync(Id_NPO);
        }
        
        public bool setFile(Project_Leap_V3.ServiceReference1.FileClass clientFile, string loc) {
            return base.Channel.setFile(clientFile, loc);
        }
        
        public System.Threading.Tasks.Task<bool> setFileAsync(Project_Leap_V3.ServiceReference1.FileClass clientFile, string loc) {
            return base.Channel.setFileAsync(clientFile, loc);
        }
        
        public bool addUserImage(Project_Leap_V3.ServiceReference1.FileClass userImage, int userID) {
            return base.Channel.addUserImage(userImage, userID);
        }
        
        public System.Threading.Tasks.Task<bool> addUserImageAsync(Project_Leap_V3.ServiceReference1.FileClass userImage, int userID) {
            return base.Channel.addUserImageAsync(userImage, userID);
        }
        
        public bool addOrgImage(Project_Leap_V3.ServiceReference1.FileClass orgImage, int orgNum) {
            return base.Channel.addOrgImage(orgImage, orgNum);
        }
        
        public System.Threading.Tasks.Task<bool> addOrgImageAsync(Project_Leap_V3.ServiceReference1.FileClass orgImage, int orgNum) {
            return base.Channel.addOrgImageAsync(orgImage, orgNum);
        }
        
        public bool addOrgFile(Project_Leap_V3.ServiceReference1.FileClass orgFile, int ogNum) {
            return base.Channel.addOrgFile(orgFile, ogNum);
        }
        
        public System.Threading.Tasks.Task<bool> addOrgFileAsync(Project_Leap_V3.ServiceReference1.FileClass orgFile, int ogNum) {
            return base.Channel.addOrgFileAsync(orgFile, ogNum);
        }
        
        public Project_Leap_V3.ServiceReference1.FileClass getUserImage(int userID) {
            return base.Channel.getUserImage(userID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.FileClass> getUserImageAsync(int userID) {
            return base.Channel.getUserImageAsync(userID);
        }
        
        public Project_Leap_V3.ServiceReference1.FileClass getFile(int orgID, bool Image) {
            return base.Channel.getFile(orgID, Image);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.FileClass> getFileAsync(int orgID, bool Image) {
            return base.Channel.getFileAsync(orgID, Image);
        }
        
        public bool verifyOrg(int OrgID, bool verify) {
            return base.Channel.verifyOrg(OrgID, verify);
        }
        
        public System.Threading.Tasks.Task<bool> verifyOrgAsync(int OrgID, bool verify) {
            return base.Channel.verifyOrgAsync(OrgID, verify);
        }
        
        public double TotalRecievedFromDonations(int OrgID) {
            return base.Channel.TotalRecievedFromDonations(OrgID);
        }
        
        public System.Threading.Tasks.Task<double> TotalRecievedFromDonationsAsync(int OrgID) {
            return base.Channel.TotalRecievedFromDonationsAsync(OrgID);
        }
        
        public double TotalDonated(int UserID) {
            return base.Channel.TotalDonated(UserID);
        }
        
        public System.Threading.Tasks.Task<double> TotalDonatedAsync(int UserID) {
            return base.Channel.TotalDonatedAsync(UserID);
        }
        
        public Project_Leap_V3.ServiceReference1.mobileEve GetNextEvent(int OrgID) {
            return base.Channel.GetNextEvent(OrgID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.mobileEve> GetNextEventAsync(int OrgID) {
            return base.Channel.GetNextEventAsync(OrgID);
        }
        
        public Project_Leap_V3.ServiceReference1.mobileFC GetTotalFCProgress(int OrgID) {
            return base.Channel.GetTotalFCProgress(OrgID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.mobileFC> GetTotalFCProgressAsync(int OrgID) {
            return base.Channel.GetTotalFCProgressAsync(OrgID);
        }
        
        public Project_Leap_V3.ServiceReference1.mobileEve[] GetMobileEvents(int OrgID) {
            return base.Channel.GetMobileEvents(OrgID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.mobileEve[]> GetMobileEventsAsync(int OrgID) {
            return base.Channel.GetMobileEventsAsync(OrgID);
        }
        
        public Project_Leap_V3.ServiceReference1.EventVolunteer getNextVolunteer(int UserID) {
            return base.Channel.getNextVolunteer(UserID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.EventVolunteer> getNextVolunteerAsync(int UserID) {
            return base.Channel.getNextVolunteerAsync(UserID);
        }
        
        public Project_Leap_V3.ServiceReference1.mobileEve getNextNPOEvent(int UserID) {
            return base.Channel.getNextNPOEvent(UserID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.mobileEve> getNextNPOEventAsync(int UserID) {
            return base.Channel.getNextNPOEventAsync(UserID);
        }
        
        public Project_Leap_V3.ServiceReference1.mobileEve[] GetMobileEventsAtt(int userID) {
            return base.Channel.GetMobileEventsAtt(userID);
        }
        
        public System.Threading.Tasks.Task<Project_Leap_V3.ServiceReference1.mobileEve[]> GetMobileEventsAttAsync(int userID) {
            return base.Channel.GetMobileEventsAttAsync(userID);
        }
    }
}
